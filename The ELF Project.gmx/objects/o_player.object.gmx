<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_player</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
scr_alarm_init(5);
runstate = "none";
downtap = false;
p1=0;
p2=0;
//---------Character Standard Variables
grav = 0.2;      //Gravity
hspd = 0;        //Horizontal Speed
vspd = 0;        //Vertical Speed
walkspd = 2;     //Walk Speed
airspd = 2.75;
runspd = 3.5;      //Run Speed
jumpspeed = 4.5  //6.5; //Jumping Speed
inAir = false;
jumptype = "full_jump";
AirJump = 1;     //Double Jump
movespeed = 2;   //Moving Speed
PlayerAnimation = "idle";
PlayerLook = 1
state = scr_state_normal; //this is to make controlling the player much easier.((ledge state, wall jump state, ladder state. etc....))

keycheck = "none"; // to control the player key check
alarm[0]=60

//---------Combat Variables
PlayerClass = "Knight"
WeaponEquipped = "no"
image_alpha = 1

//---------Controls Variables


//---------Player Stats Variables
HP = 100;
MaxHP = 100;
Energy = 100;
LVL = 1;
XP = 0;
MaxXP = (LVL*12)*(LVL*2)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Alarm Event
if scr_alarm_event(0){
    if !keyboard_check(key_left) &amp;&amp; !keyboard_check(key_right){
        runstate = "none";
    }
}
if scr_alarm_event(1){
    downtap = false;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Player Animations
scr_animations();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Execute current state code
script_execute(state);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw self/with angle changes
draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, angle, image_blend, image_alpha);
/*var inst = scr_nearest_collision(x,y+1,obj_wall);
var inst2 = scr_nearest_collision(x,y+sprite_get_yoffset(sprite_index)+1,obj_wall);*/

/*var inst = scr_instance_nearest_area(x,y+1,obj_wall);//instance_nearest(x,y+1,obj_wall);
var inst2 = scr_instance_nearest_area(x,y+sprite_get_yoffset(sprite_index)+1,obj_wall);
*/
/*draw_circle_colour(x,y+sprite_get_yoffset(sprite_index),2,c_black,c_black,false)
draw_set_font(fnt_default);
if inst != noone{
draw_text(inst.x,inst.y-100,"inst: "+string(inst));
}
if inst2 != noone{
draw_text(inst2.x,inst2.y-116,"inst2: "+string(inst2));
}*/


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
