<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bird_regular_body_flying</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set Bird Color, Speed &amp; Image Speed
randomize()
image_blend = choose(16763775,8421375,11834367,14876563,9699227,9699326,9683455,16777215,12632256,4022675,16744645)

spd = random_range(1.5,2.25)
dir = obj_probs.BirdDirection
image_speed = spd/10
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Birdvariables
OnRoute = "yes"
GoToBirdspot = "no"
OnSpot = "no"
CatchWorm = "no"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if OnSpot = "yes"
    {
    OnSpot = "no"
    OnRoute = "yes"
    sprite_index = spr_bird_regular_body_flying
    spd = random_range(1.5,2.25)
    dir = choose(0,180)
    image_speed = spd/10
    if dir = 180
        {
        image_xscale = 1
        }
    }
b.alarm[0] = random_range(480,900)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Bird AI
if OnRoute = "yes"
    {
    motion_set(dir,spd)
    if dir = 0
        {
        image_xscale = -1
        }    
    }

// Find Birdspot
if instance_exists(obj_birdspot)
    {
    b=instance_nearest(x,y,obj_birdspot)
    
    if distance_to_object(b) &lt; 1000 &amp;&amp; b.occupied = "no" 
        {
        if image_xscale=-1 and b.x&gt;x || image_xscale=1 and b.x&lt;x
            {
            randomize()
            GoToBirdspot = choose("yes","no")
            if GoToBirdspot = "yes"
                {
                OnRoute = "no"
                move_towards_point(b.x,b.y,spd)
                b.occupied="yes"
                }
            }
        }
    if place_meeting(x+spd+1,y+spd+1,b) and GoToBirdspot = "yes"
        {
        spd = 0
        x = b.x+4
        y = b.y-4
        sprite_index = spr_bird_regular_onspot
        OnSpot = "yes"
        alarm[0] = random_range(600,1800)
        }
        
    if OnSpot = "yes"
        {
        spd = 0
        x = b.x+4
        y = b.y+4
        sprite_index = spr_bird_regular_onspot
        GoToBirdspot = "no"
        }
        
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy Bird

obj_probs.TotalBirds -= 1
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Bird Beak

draw_self()

if sprite_index = spr_bird_regular_body_flying
    {
    if dir = 180
        {
        draw_sprite(spr_bird_regular_beak,-1,x-7,y-2)
        }
    if dir = 0
        {
        draw_sprite_ext(spr_bird_regular_beak,-1,x+7,y-2,-1,1,0,c_white,1)
        }
    }
if sprite_index = spr_bird_regular_onspot
    {
    if dir = 180
        {
        draw_sprite(spr_bird_regular_beak,-1,x-2,y-3)
        }
    if dir = 0
        {
        draw_sprite_ext(spr_bird_regular_beak,-1,x+2,y-3,-1,1,0,c_white,1)
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
